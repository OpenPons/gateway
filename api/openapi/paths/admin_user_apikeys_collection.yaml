parameters:
  - name: userId
    in: path
    required: true
    description: Identifier of the user for whom to manage API keys.
    schema:
      type: string
      format: uuid

get:
  tags:
    - Admin - IAM
  summary: List API keys for a user
  operationId: listUserApiKeys
  security:
    - BearerAuth: [\"admin:iam:read\"] # Or a more specific scope like admin:iam:apikeys:read
  # Add pagination if a user can have many keys
  parameters:
    - name: limit
      in: query
      description: Maximum number of API keys to return.
      schema:
        type: integer
        default: 25
    - name: offset
      in: query
      description: Offset for pagination.
      schema:
        type: integer
        default: 0
  responses:
    '200':
      description: A list of API keys for the specified user.
      content:
        application/json:
          schema:
            $ref: '../schemas/_index.yaml#/APIKeyList'
    '404':
      description: User not found.
      content:
        application/json:
          schema:
            $ref: '../schemas/_index.yaml#/Error'
    default:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '../schemas/_index.yaml#/Error'

post:
  tags:
    - Admin - IAM
  summary: Create a new API key for a user
  operationId: createUserApiKey
  security:
    - BearerAuth: [\"admin:iam:write\"] # Or admin:iam:apikeys:create
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../schemas/_index.yaml#/APIKeyCreateRequest'
  responses:
    '201':
      description: API key created successfully. The key value is only returned on creation.
      content:
        application/json:
          schema:
            $ref: '../schemas/_index.yaml#/APIKeyCreateResponse'
    '404':
      description: User not found.
      content:
        application/json:
          schema:
            $ref: '../schemas/_index.yaml#/Error'
    default:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '../schemas/_index.yaml#/Error'
